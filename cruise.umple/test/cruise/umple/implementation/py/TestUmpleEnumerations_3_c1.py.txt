from Status import Status
from Gender import Gender
import os
from enum import Enum, auto

class C1:
    class Status(Enum):
        def _generate_next_value_ (name, start, count, last_values) :
            return name
        Married = auto()
        Single = auto()
        Divorced = auto()

    class Gender(Enum):
        def _generate_next_value_ (name, start, count, last_values) :
            return name
        Male = auto()
        Female = auto()

    def __init__(self, aStatus, aGender):
        self._status = aStatus
        self._gender = aGender

    def setStatus(self, aStatus):
        wasSet = False
        self._status = aStatus
        wasSet = True
        return wasSet

    def setGender(self, aGender):
        wasSet = False
        self._gender = aGender
        wasSet = True
        return wasSet

    def getStatus(self):
        return self._status

    def getGender(self):
        return self._gender

    def delete(self):
        pass

    def __str__(self):
        return super().__str__() + "[" + "]" + os.linesep + "  " + "status" + "=" + (self.getStatus() != ((self.getStatus().toString().replaceAll("  ", "    ")) if not self.getStatus().equals(self) else "this") if None else "null") + os.linesep + "  " + "gender" + "=" + (self.getGender() != ((self.getGender().toString().replaceAll("  ", "    ")) if not self.getGender().equals(self) else "this") if None else "null")

